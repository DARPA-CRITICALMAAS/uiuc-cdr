services:

  # ----------------------------------------------------------------------
  # REVERSE PROXY
  # ----------------------------------------------------------------------
  traefik:
    image: "traefik:munster"
    command:
      - --log.level=INFO
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      # Entrypoints
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entryPoint.to=https
      # Docker setup
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false
      - --providers.docker.watch=true
    restart: "unless-stopped"
    profiles:
      - traefik
      - allinone
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
    volumes:
      - "traefik:/config"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # ----------------------------------------------------------------------
  # MESSAGE BROKER
  # ----------------------------------------------------------------------
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    restart: unless-stopped
    profiles:
      - cdrhook
      - allinone
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USERNAME:-guest}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD:-guest}"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - ./50-criticalmaas.conf:/etc/rabbitmq/conf.d/50-criticalmaas.conf:ro

  # ----------------------------------------------------------------------
  # CDR HOOK
  # ----------------------------------------------------------------------
  cdrhook:
    image: ncsa/criticalmaas-cdr:${CDRHOOK_VERSION:-latest}
    hostname: cdrhook
    restart: unless-stopped
    profiles:
      - cdrhook
      - allinone
    depends_on:
      - rabbitmq
    environment:
      CDR_URL: "${CDR_URL}"
      CDR_TOKEN: "${CDR_TOKEN}"
      CDR_KEEP_EVENT: "no"
      CALLBACK_URL: "${CALLBACK_URL}"
      CALLBACK_SECRET: "${CALLBACK_SECRET}"
      CALLBACK_USERNAME: "${CALLBACK_USERNAME}"
      CALLBACK_PASSWORD: "${CALLBACK_PASSWORD}"
      RABBITMQ_URI: "${RABBITMQ_URI}"
      PREFIX: ""
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cdrhook.rule=Host(`${SERVER_NAME}`) && PathPrefix(`/cdr`)"
    volumes:
      - cdrhook:/data

  # ----------------------------------------------------------------------
  # RABBITMQ MONITOR
  # ----------------------------------------------------------------------
  monitor:
    image: ncsa/criticalmaas-monitor:${CDRHOOK_VERSION:-latest}
    hostname: monitor
    build: monitor
    restart: unless-stopped
    profiles:
      - cdrhook
      - allinone
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_MGMT_URL: ${RABBITMQ_MGMT_URL}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitor.rule=Host(`${SERVER_NAME}`) && PathPrefix(`/monitor`)"

  # ----------------------------------------------------------------------
  # DATA PROCESSING PIPELINE
  # use one, or more, per model to be executed
  # ----------------------------------------------------------------------
  pipeline:
    image: ncsa/criticalmaas-pipeline:${PIPELINE_VERSION:-latest}
    runtime: nvidia
    restart: "unless-stopped"
    profiles:
      - pipeline
      - allinone
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      PREFIX: ""
      PIPELINE_MODEL: ${PIPELINE_MODEL:-icy-resin}
    ipc: host
    command:
      - -v 
      - --data
      - /data
      - --log
      - /logs/logs.latest
      - --output
      - /output
      - --feedback
      - /feedback
      - --amqp
      - "${RABBITMQ_URI}"
      - --inactive_timeout
      - "86000"
      - --output_types
      - cdr_json
      - --model
      - ${PIPELINE_MODEL}
    volumes:
      - "data:/data"
      - "logs:/logs"
      - "output:/output"
      - "feedback:/feedback"

  # ----------------------------------------------------------------------
  # DOWNLOADER and UPLOADER
  # ----------------------------------------------------------------------
  downloader:
    image: ncsa/criticalmaas-downloader:${CDRHOOK_VERSION:-latest}
    restart: "unless-stopped"
    profiles:
      - pipeline
      - allinone
    environment:
      RABBITMQ_URI: "${RABBITMQ_URI}"
    volumes:
      - "data:/data"

  uploader:
    image: ncsa/criticalmaas-uploader:${CDRHOOK_VERSION:-latest}
    restart: "unless-stopped"
    profiles:
      - pipeline
      - allinone
    environment:
      CDR_URL: "${CDR_URL}"
      CDR_TOKEN: "${CDR_TOKEN}"
      RABBITMQ_URI: "${RABBITMQ_URI}"
      PREFIX: ""
    volumes:
      - "output:/output"

volumes:
  traefik:
  rabbitmq:
  cdrhook:
  feedback:
  data:
  logs:
  output:

