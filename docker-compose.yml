version: "3.2"

services:

  # ----------------------------------------------------------------------
  # REVERSE PROXY
  # ----------------------------------------------------------------------
  traefik:
    image: "traefik:v2.10"
    command:
      - --log.level=INFO
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      # Entrypoints
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls.certresolver=myresolver
      # letsencrypt
      #- --certificatesresolvers.myresolver.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/config/acme.json
      # uncomment to use testing certs
      - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=http
      # Docker setup
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false
      - --providers.docker.watch=true
    restart: "unless-stopped"
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "traefik:/config"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${SERVER_NAME}`)"
      - "traefik.http.routers.api.service=api@internal"

  # ----------------------------------------------------------------------
  # MESSAGE BROKER
  # ----------------------------------------------------------------------
  rabbitmq:
    image: rabbitmq:management-alpine
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USERNAME:-guest}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD:-guest}"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  # ----------------------------------------------------------------------
  # CDR HOOK
  # ----------------------------------------------------------------------
  cdrhook:
    image: ncsa/criticalmaas-cdr:0.0.4
    build: .
    restart: unless-stopped
    depends_on:
      - rabbitmq
    environment:
      CDR_TOKEN: "${CDR_TOKEN}"
      SYSTEM_NAME: "ncsa"
      SYSTEM_VERSION: "0.0.4"
      CALLBACK_URL: "https://${SERVER_NAME}${CALLBACK_PATH}"
      CALLBACK_SECRET: "${CALLBACK_SECRET}"
      CALLBACK_USERNAME: "${CALLBACK_USERNAME}"
      CALLBACK_PASSWORD: "${CALLBACK_PASSWORD}"
      RABBITMQ_URI: "amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq/%2F"
      DOWNLOAD_QUEUE: "download"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cdrhook.rule=Host(`${SERVER_NAME}`) && PathPrefix(`${CALLBACK_PATH}`)"

volumes:
  traefik:
  rabbitmq:
