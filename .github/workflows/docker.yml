name: Docker

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    strategy:
      fail-fast: false
      matrix:
        name:
          - cdrhook
          - uploader
          - monitor
          - downloader
        include:
          - name: cdrhook
            FOLDER: cdrhook
            #PLATFORM: "linux/amd64,linux/arm64"
            PLATFORM: "linux/amd64"
            IMAGE: criticalmaas-cdr
          - name: uploader
            FOLDER: uploader
            PLATFORM: "linux/amd64,linux/arm64"
            IMAGE: criticalmaas-uploader
          - name: monitor
            FOLDER: monitor
            PLATFORM: "linux/amd64,linux/arm64"
            IMAGE: criticalmaas-monitor
          - name: downloader
	    FOLDER: downloader
	    PLATFORM: "linux/amd64,linux/arm64"
	    IMAGE: criticalmaas-downloader

    steps:
      - uses: actions/checkout@v4

      # create metadata for image
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ncsa/${{ matrix.IMAGE }}
          # ghcr.io/${{ github.repository_owner }}/${{ matrix.IMAGE }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      # setup docker build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Inspect Builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      # login to registries
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # build the docker images
      - name: Build and push ${{ matrix.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.FOLDER }}
          #push: ${{ github.event_name != 'pull_request' }}
          push: true
          platforms: ${{ matrix.PLATFORM }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
